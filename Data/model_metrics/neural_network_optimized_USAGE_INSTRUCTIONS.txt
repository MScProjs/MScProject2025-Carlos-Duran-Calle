
NEURAL NETWORK (MULTI-LAYER PERCEPTRON) MODEL USAGE INSTRUCTIONS
===============================================================

Model Information:
- Model Name: neural_network_optimized
- Model Type: Neural Network (Multi-Layer Perceptron) - Optimized
- Optimization Method: GridSearchCV with dropout-focused scoring

BEST HYPERPARAMETERS:
-------------------
{
  "activation": "tanh",
  "alpha": 0.001,
  "hidden_layer_sizes": [
    100,
    50
  ],
  "learning_rate_init": 0.01,
  "max_iter": 500,
  "solver": "lbfgs"
}

PERFORMANCE METRICS:
------------------
- Test Accuracy: 0.5666
- Test F1-Weighted: 0.5385
- Test F1-Macro: 0.4399
- Best CV Score (dropout_recall): 0.1867

NEURAL NETWORK-SPECIFIC INSIGHTS:
--------------------------------
- Architecture: (100, 50) hidden layer(s)
- Total parameters: 7,303
- Activation function: tanh
- Optimization solver: lbfgs
- Learning rate: 0.01
- Regularization (alpha): 0.001
- Training iterations: 500
- Early stopping: Not triggered

NETWORK ARCHITECTURE DETAILS:
----------------------------
- Input layer: 20 features
- Hidden layer(s): (100, 50)
- Output layer: 3 classes
- Total layers: 4
- Complexity level: High

CLASS DISTRIBUTION:
------------------
Class 0: 4,237 samples (19.1%)
Class 1: 5,634 samples (25.4%)
Class 2: 12,309 samples (55.5%)


DROPOUT-FOCUSED OPTIMIZATION:
---------------------------
Class imbalance handled through custom scoring metrics:
- dropout_recall: PRIMARY METRIC - Prioritizes catching dropout students (class 0)
- dropout_precision: Ensures quality of dropout predictions
- at_risk_recall: Targets both dropout and at-risk students
- f1_weighted: Secondary metric balancing all classes

FILES SAVED:
-----------
- Metrics: ../Data\model_metrics\metrics\neural_network_optimized_metrics.json
- Classification Report: ../Data\model_metrics\reports\neural_network_optimized_classification_report.json
- Confusion Matrix: ../Data\model_metrics\metrics\neural_network_optimized_confusion_matrix.json
- Coefficients (Permutation Importance): ../Data\model_metrics\metrics\neural_network_optimized_coefficients.json
- Usage Instructions: This file

NOTES:
-----
- This model was optimized using GridSearchCV with dropout-focused scoring
- Total combinations tested: 120
- Cross-validation: 5-fold
- Optimization runtime: 50.0 minutes
- Primary scoring metric: dropout_recall
- Class imbalance ratio: 2.91:1

üß† NEURAL NETWORK ADVANTAGES:
   - Learns complex non-linear patterns automatically
   - Can capture feature interactions
   - Flexible architecture for different problems
   - Good performance on high-dimensional data
   - Universal approximation capability

‚ö†Ô∏è  NEURAL NETWORK CONSIDERATIONS:
   - "Black box" model - difficult to interpret
   - May require more data to avoid overfitting
   - Results can vary due to random initialization
   - Sensitive to hyperparameter choices
   - Computationally more intensive than linear models

üí° FEATURE IMPORTANCE:
   Top 5 most important features (via permutation importance):
   1. excellent_Score: 0.0389 ¬± 0.0090
   2. active_in_VLE: 0.0201 ¬± 0.0069
   3. student_engagementt: 0.0144 ¬± 0.0067
   4. imd_band_ord: 0.0128 ¬± 0.0069
   5. region_East Midlands Region: 0.0106 ¬± 0.0046


üí° TIPS FOR USING THIS MODEL:
   - Feature scaling is highly recommended for neural networks
   - Monitor for overfitting on new datasets
   - Consider ensemble methods for better robustness
   - Use permutation importance for feature interpretation
